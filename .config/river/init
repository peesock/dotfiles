#!/bin/sh

# WManagemnt
riverctl map -repeat normal Super Q close
riverctl map -repeat normal Super F toggle-fullscreen
riverctl map -repeat normal Super+Shift F toggle-float
riverctl map -repeat normal Super+Control+Shift Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map -repeat normal Super J focus-view next
riverctl map -repeat normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map -repeat normal Super+Shift J swap next
riverctl map -repeat normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map -repeat normal Super Period focus-output next
riverctl map -repeat normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map -repeat normal Super+Shift Period send-to-output next
riverctl map -repeat normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map -repeat normal Super+Shift Return zoom
riverctl map -repeat normal Super Tab focus-previous-tags

# layout stuff
riverctl default-layout bsp-layout
# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
# riverctl map -repeat normal Super H send-layout-cmd rivertile "main-ratio -0.05"
# riverctl map -repeat normal Super L send-layout-cmd rivertile "main-ratio +0.05"
#
# # Super+{Up,Right,Down,Left} to change layout orientation
# riverctl map -repeat normal Super Up    send-layout-cmd rivertile "main-location top"
# riverctl map -repeat normal Super Right send-layout-cmd rivertile "main-location right"
# riverctl map -repeat normal Super Down  send-layout-cmd rivertile "main-location bottom"
# riverctl map -repeat normal Super Left  send-layout-cmd rivertile "main-location left"
#
# # Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
# riverctl map -repeat normal Super+Shift H send-layout-cmd rivertile "main-count +1"
# riverctl map -repeat normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map -repeat normal Super+Alt H move left 100
riverctl map -repeat normal Super+Alt J move down 100
riverctl map -repeat normal Super+Alt K move up 100
riverctl map -repeat normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map -repeat normal Super+Alt+Control H snap left
riverctl map -repeat normal Super+Alt+Control J snap down
riverctl map -repeat normal Super+Alt+Control K snap up
riverctl map -repeat normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map -repeat normal Super+Alt+Shift H resize horizontal -100
riverctl map -repeat normal Super+Alt+Shift J resize vertical 100
riverctl map -repeat normal Super+Alt+Shift K resize vertical -100
riverctl map -repeat normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F10 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F10 enter-mode normal

# utils
riverctl map -repeat normal Super Return spawn foot
riverctl map normal Super D spawn 'cmd=$(tofi-run); [ "$cmd" ] && exec "$cmd"'

riverctl map -repeat normal Super S spawn "screenshot temp"
riverctl map -repeat normal Super+Shift S spawn "screenshot temp crop"
riverctl map -repeat normal Super+Control S spawn "screenshot temp edit"
riverctl map -repeat normal Super+Alt S spawn "screenshot"
riverctl map -repeat normal Super+Shift S spawn "screenshot crop"
riverctl map -repeat normal Super+Control S spawn "screenshot edit"

riverctl map normal Super+Control+Shift L spawn "swaylock -Fc 000000"

riverctl map -repeat normal Super P spawn "passwords"
riverctl map -repeat normal Super+Control P spawn "passwords -k"

# Various media key mapping examples for both normal and locked mode
for mode in normal locked
do
	# Eject the optical drive (well if you still have one that is)
	riverctl map $mode None XF86Eject spawn 'eject -T'

	# Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
	riverctl map -repeat $mode Super bracketleft  spawn 'volume p vol - 4 Global'
	riverctl map -repeat $mode Super bracketright  spawn 'volume p vol + 4 Global'
	riverctl map -repeat $mode Super+Control bracketleft  spawn 'volume a vol - 4 Master hw:PCH'
	riverctl map -repeat $mode Super+Control bracketright  spawn 'volume a vol + 4 Master hw:PCH'
	riverctl map -repeat $mode Super+Alt bracketleft  spawn 'mpc volume -4; notify-send -r 13 -u low -t 1000 "MPD:" $(mpc status %volume%)'
	riverctl map -repeat $mode Super+Alt bracketright  spawn 'mpc volume +4; notify-send -r 13 -u low -t 1000 "MPD:" $(mpc status %volume%)'
	riverctl map -repeat $mode Super backslash         spawn 'volume p mute Global'
	riverctl map -repeat $mode Super+Control backslash         spawn 'volume a mute Master hw:PCH'
	riverctl map -repeat $mode Super+Alt backslash         spawn 'mpc toggle; notify-send -r 13 -u low -t 1000 "MPD:" $(mpc status %state%)'
	done

# Set background and border color
riverctl background-color 0x002b36
# riverctl border-color-focused 0x93a1a1
# riverctl border-color-unfocused 0x586e75
riverctl border-color-focused 0xff00ff
riverctl border-color-unfocused 0x444444

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

river-bsp-layout --inner-gap 7 --outer-gap 7 --split-perc 0.5 &
# rivertile -main-ratio 0.5 -view-padding 7 -outer-padding 7 &

dbus-update-activation-environment --all
setbg --stretch
