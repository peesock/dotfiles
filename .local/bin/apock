#!/bin/sh 

# warn feature used with xss-lock
if [ "$1" = "warn" ]; then
	i=$(xset q | grep cycle | awk '{print $4}')
	while [ $i -gt 0 ]; do
		t=1050
		[ $i -eq 1 ] && t=600 # prevents dunst from displaying this when waking up
		notify-send -r 13 -t $t "Locking" "$i\s"
		sleep 1
		i=$((i - 1))
	done
	sleep 2147483647 &
	wait
fi

pidDir="/tmp/$USER/$(basename "$0")"
mkdir -p "$pidDir"

pre(){
	# kill secret services; if someone unlocks my screen, at least they won't have my unecrypted passwords
	( killall keepassxc keepmenu; sleep 3; killall -s 9 keepassxc keepmenu ) 2>/dev/null &

	# (sleep 2; dunstctl set-paused true) &
	dunstctl set-paused true
	rm "$pidDir"/*
}
post(){
	dunstctl set-paused false
}

# set up visualizer
visualizer(){
	terminal=alacritty

	alock -a passwd -b none & lockPID=$!
	echo $lockPID > "$pidDir/lockPID"

	# pause all non-server programs accessing the fifo
	fifoFile="/tmp/mpd.fifo"
	# pause the shells attached to visualizers (if any) to prevent shitassery
	blackParents="zsh sh dash bash fish"
	# protect these programs accessing the fifo from being paused
	whiteChildren="mpd safe_fifo"

	# create and kill pidList
	for pid in $(lsof "$fifoFile" | sed '1d' | sed 's/\S*\s*//' | cut -d' ' -f1); do
	# for pid in $(sleep 100 | sed '1d' | sed 's/\S*\s*//' | cut -d' ' -f1); do
		pidName="$(ps -cp $pid -o comm="" | sed 's/^\s*//')"
		for n in $whiteChildren; do
			if [ "$n" = "$pidName" ]; then
				protect=true
				break
			else
				protect=false
			fi
		done
		$protect || pidList="$pidList $pid"
		ppid="$(ps -cp $pid -o ppid="" | sed 's/^\s*//')"
		ppidName="$(ps -cp $ppid -o comm="" | sed 's/^\s*//')"
		for n in $blackParents; do
			if [ "$ppidName" = "$n" ]; then 
				pidList="$pidList $ppid"
			fi
		done
	done
	kill -s STOP $pidList 2>/dev/null

	# kitty -o background="#000000" -o background_opacity=1 -o font_size=10 --start-as fullscreen vis & termPID=$!
	alacritty -o 'colors.primary.background="#000000"' -o 'window.opacity=1' -o 'window.startup_mode=Fullscreen' -e vis & coverPID=$!
	echo $coverPID > "$pidDir/coverPID"

	wait "$lockPID"
	kill "$fallbackPID"
	kill "$coverPID"
	kill -s CONT $pidList
}

fallback(){
	sleep 3
	coverPID=$(cat "$pidDir/coverPID")
	funcPID=$(cat "$pidDir/funcPID")
	lockPID=$(cat "$pidDir/lockPID")
	while true; do # ensure screen is covered if cover fails
		if ! ps -p $coverPID >/dev/null 2>&1; then
			pgrep alock
			kill $funcPID
			kill $lockPID
			pgrep alock
			alock -a passwd > ~/log 2>&1
			break
		fi
		sleep 0.5
	done
}

pre
fallback & fallbackPID=$!
if command -v $terminal >/dev/null && command -v vis >/dev/null; then
	visualizer & echo $! > "$pidDir/funcPID"
else
	alock -a passwd
fi
wait
post
