#!/usr/bin/env sh

# Program to convert between file formats and codecs with presets.

programName=$(basename "$0")
usage(){
	echo "\
usage:
1: $programName [OPTIONS] SOURCE DEST
2: $programName [OPTIONS] SOURCE... DIRECTORY
3: $programName [OPTIONS] SOURCE...

1: Convert SOURCE to DEST with file type given by extension.
2: Convert SOURCE(s) to DIRECTORY, auto rename files
3: Convert SOURCE(s) to auto renamed files

options:
-h            print help
-t ext        specify filetype by extension, eg. jpg
-f            no autonaming; will overwrite files
-k            keep extensions as-is
-o \"args\"     insert ffmpeg options

examples:

    $programName farter.avif
to make farter.png, or if farter.png exists, farter-1.png

    $programName -k -t jpg farter.webm baghdad.imagizer
to make a jpeg image out of a webm video

    $programName *.webp pics/
to convert all files ending in .webp to png and place DEST(s) in pics/ folder

    $programName -t avif -k -f *.png
to secretly overwrite all your pngs into avifs and keep .png extension
"
}

extensioner(){
	echo "$1" | sed "s/\(.*\)\..*\|\$/\1.$2/"
}

unset type
eval 'set -- '$(getopt -o 't:fkp:i:o:h' -- "$@")
while true; do
	case "$1" in
		-t)
			type=$2; typeSet=true; shift 2;;
		-f)
			force=true; shift;;
		-k)
			keep=true; shift;;
		-p)
			for preset in $2; do
				case $preset in
					web)
						outOpts="$outOpts -c:v libx264 -pix_fmt yuv420p -c:a aac"
						type=mp4
						typeSet=true
						;;
				esac
			done
			shift 2
			;;
		-i)
			inOpts="$inOpts $2"; shift 2;;
		-o)
			outOpts="$outOpts $2"; shift 2;;
		-h)
			usage; exit;;
		--)
			shift; break;;
		*)
			echo erm.. wtf... >&2; exit 1;;
	esac
done

last=$(eval "echo \${$#}")
evaller(){
	outfile="$infile"
}
if [ -d "$last" ]; then
	evaller(){
		outfile="$last/$infile"
	}
fi

converter(){
	echo
	tmp=$(mktemp -u).$type
	ffmpeg -hide_banner $inOpts -i "$infile" $outOpts "$tmp" ||
		{ rm -v "$tmp"; exit 1; }
	mv -v "$tmp" "$outfile"
}

while [ $# -gt 0 ]; do
	infile=$1
	[ -f "$infile" ] || {
		echo "'$infile' not a file :appel:" >&2
		shift
		continue
	}

	evaller
	[ $typeSet ] ||
		type=$(echo "$outfile" | sed 's/.*\.//')
	[ $keep ] ||
		outfile="$(extensioner "$outfile" "$type")"
	[ $force ] ||
		outfile="$(name rename "$outfile")"
	echo "in: '$infile'"
	echo "out: '$outfile'"
	converter
	shift
done
