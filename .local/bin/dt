#!/bin/sh

dotDir="$HOME/.dotfiles" # default
workingDir="$HOME"
programName=$(basename "$0")

while true; do
	[ "$1" = -d ] && {
		dotDir="$2"
		shift 2
		continue
	}
	[ "$1" = -w ] && {
		workingDir="$2"
		shift 2
		continue
	}
	break
done

help(){
	echo "Run '$programName link PATH...' to hardlink everything under PATH to DOTDIR."
	echo "'$programName g ...' will run git. Do '$programName g add PATH...' to add all existing hardlinks of PATH to the git repo."
	echo "'$programName add PATH...' will run both above commands."
	echo "Hardlink removal can be done with '$programName g rm PATH...'."
	echo "To remove both links of the file, run '$programName rm PATH...'." #If you have dot links that have not been added to git, you can run 'clean PATH...'"
}

# todo: add restore option using reverse dotpath
dotpath()(
	for file in "$@"; do
		file=$(realpath -m -- "$file") # calling this once for every file sucks but so does shell
		[ "$file" = "${file#"$workingDir"}" ] && {
			echo "error: '$file' above working dir" >&2
			exit=1
			continue
		}
		exit=0
		file=${file#"$dotDir"} # resolve any paths to dotdir
		echo "$dotDir${file#"$workingDir"}"
	done
	return $exit
)

link()(
	for file in "$@"; do
		path=$(dotpath "$file")
		mkdir -p "$(dirname -- "$path")"
		echo "linking '$file' to '$path'" >&2
		cp -rfl "$file" "$path"
	done
)

rm()(
	for file in "$@"; do
		path=$(dotpath "$file")
		echo "removing '$file' and '$path'" >&2
		/bin/rm -rI "$path" "$file"
	done
)

add()(
	link "$@"
	g add "$@"
)

g(){
	# shellcheck disable=SC2046
	eval 'git --git-dir="$dotDir/.git" --work-tree="$dotDir" '$(
	# if any args are files, ensure they come from $workingDir.
		i=1
		for arg in "$@"; do
			# ensure --option arguments are not seen as files
			[ $files ] || {
				[ "$arg" = "--" ] && files=true && continue
			}
			[ $files ] ||
				echo "$arg" | grep -- '^-\?-[^-]' >/dev/null && {
					i=$((i - 1))
				}
			if [ $files ] || [ -f "$arg" ] && [ $i -gt 1 ]; then
				arg=$(dotpath "$arg") ||
					continue
			fi
			echo "'$arg'"
			i=$((i + 1))
		done
	)''
}

init(){
	mkdir -p "$dotDir"
	git init "$dotDir"
}

if type "$1" | grep -iF "shell function" >/dev/null; then
	"$@"
else
	echo "Run '$programName help' for quick options or see '$0' for all functions."
	exit 1
fi
